2023/09/27 21:45:56 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.18 (default, Sep 11 2023, 13:40:15) [GCC 11.2.0]
    CUDA available: True
    numpy_random_seed: 164408751
    GPU 0: Tesla P100-PCIE-12GB
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: gcc (GCC) 7.3.0
    PyTorch: 1.10.1
    PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.2.3 (Git Hash 7336ca9f055cf1bfa13efb658fe15dc9b41f0740)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.3
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.2
  - Magma 2.5.2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.10.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

    TorchVision: 0.11.2
    OpenCV: 4.8.0
    MMEngine: 0.8.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 164408751
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2023/09/27 21:45:56 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=False)
backend_args = None
classes = (
    'vehicle',
    'pedestrian',
    'sign',
    'cyclist',
)
data_root = '../../coco_1k/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(
        interval=1, max_keep_ckpts=10, save_best='auto',
        type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = 'best_coco_bbox_mAP_epoch_10.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
max_epochs = 10
max_keep_ckpts = 10
model = dict(
    backbone=dict(
        base_width=4,
        depth=101,
        frozen_stages=1,
        groups=64,
        init_cfg=dict(
            checkpoint='open-mmlab://resnext101_64x4d', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        style='pytorch',
        type='ResNeXt'),
    bbox_head=dict(
        feat_channels=256,
        in_channels=256,
        loss_bbox=dict(loss_weight=1.0, type='IoULoss'),
        loss_centerness=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
        loss_cls=dict(
            alpha=0.25,
            gamma=2.0,
            loss_weight=1.0,
            type='FocalLoss',
            use_sigmoid=True),
        num_classes=4,
        stacked_convs=4,
        strides=[
            8,
            16,
            32,
            64,
            128,
        ],
        type='FCOSHead'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        add_extra_convs='on_output',
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        relu_before_extra_convs=True,
        start_level=1,
        type='FPN'),
    test_cfg=dict(
        max_per_img=100,
        min_bbox_size=0,
        nms=dict(iou_threshold=0.5, type='nms'),
        nms_pre=1000,
        score_thr=0.05),
    type='FCOS')
num_classes = 4
optim_wrapper = dict(
    clip_grad=dict(max_norm=35, norm_type=2),
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0001),
    paramwise_cfg=dict(bias_decay_mult=0.0, bias_lr_mult=2.0),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=10,
        gamma=0.1,
        milestones=[
            4,
            8,
        ],
        type='MultiStepLR'),
]
resume = False
save_epoch_intervals = 1
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='annotations/result.json',
        backend_args=None,
        data_prefix=dict(img='images/'),
        data_root='../../coco_1k/',
        metainfo=dict(classes=(
            'vehicle',
            'pedestrian',
            'sign',
            'cyclist',
        )),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1333,
                800,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file='../../coco_1k/annotations/result.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        1333,
        800,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_ann_file = 'annotations/result.json'
train_batch_size_per_gpu = 2
train_cfg = dict(max_epochs=10, type='EpochBasedTrainLoop', val_interval=1)
train_data_prefix = 'images/'
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=2,
    dataset=dict(
        ann_file='annotations/result.json',
        backend_args=None,
        data_prefix=dict(img='images/'),
        data_root='../../coco_1k/',
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        metainfo=dict(classes=(
            'vehicle',
            'pedestrian',
            'sign',
            'cyclist',
        )),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(keep_ratio=True, scale=(
                1333,
                800,
            ), type='Resize'),
            dict(prob=0.5, type='RandomFlip'),
            dict(type='PackDetInputs'),
        ],
        type='CocoDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        1333,
        800,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(type='PackDetInputs'),
]
val_ann_file = 'annotations/result.json'
val_batch_size_per_gpu = 1
val_cfg = dict(type='ValLoop')
val_data_prefix = 'images/'
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='annotations/result.json',
        backend_args=None,
        data_prefix=dict(img='images/'),
        data_root='../../coco_1k/',
        metainfo=dict(classes=(
            'vehicle',
            'pedestrian',
            'sign',
            'cyclist',
        )),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                1333,
                800,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file='../../coco_1k/annotations/result.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = './work_dirs/fcos_x101-64x4d_fpn_gn-head-1x_tune_waymococo_hj'

2023/09/27 21:46:00 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2023/09/27 21:46:00 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer2.0.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer2.0.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer2.0.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer2.0.downsample.1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer2.1.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer2.1.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer2.1.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer2.2.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer2.2.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer2.2.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer2.3.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer2.3.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer2.3.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.0.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.0.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.0.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.0.downsample.1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.1.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.1.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.1.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.2.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.2.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.2.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.3.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.3.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.3.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.4.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.4.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.4.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.5.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.5.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.5.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.6.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.6.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.6.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.7.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.7.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.7.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.8.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.8.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.8.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.9.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.9.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.9.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.10.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.10.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.10.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.11.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.11.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.11.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.12.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.12.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.12.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.13.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.13.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.13.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.14.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.14.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.14.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.15.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.15.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.15.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.16.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.16.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.16.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.17.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.17.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.17.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.18.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.18.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.18.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.19.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.19.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.19.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.20.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.20.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.20.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.21.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.21.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.21.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.22.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.22.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer3.22.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer4.0.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer4.0.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer4.0.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer4.0.downsample.1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer4.1.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer4.1.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer4.1.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer4.2.bn1.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer4.2.bn2.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- backbone.layer4.2.bn3.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- neck.lateral_convs.0.conv.bias:lr=0.02
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- neck.lateral_convs.0.conv.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- neck.lateral_convs.1.conv.bias:lr=0.02
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- neck.lateral_convs.1.conv.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- neck.lateral_convs.2.conv.bias:lr=0.02
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- neck.lateral_convs.2.conv.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- neck.fpn_convs.0.conv.bias:lr=0.02
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- neck.fpn_convs.0.conv.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- neck.fpn_convs.1.conv.bias:lr=0.02
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- neck.fpn_convs.1.conv.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- neck.fpn_convs.2.conv.bias:lr=0.02
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- neck.fpn_convs.2.conv.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- neck.fpn_convs.3.conv.bias:lr=0.02
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- neck.fpn_convs.3.conv.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- neck.fpn_convs.4.conv.bias:lr=0.02
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- neck.fpn_convs.4.conv.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.0.gn.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.1.gn.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.2.gn.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- bbox_head.cls_convs.3.gn.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.0.gn.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.1.gn.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.2.gn.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- bbox_head.reg_convs.3.gn.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- bbox_head.conv_cls.bias:lr=0.02
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- bbox_head.conv_cls.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- bbox_head.conv_reg.bias:lr=0.02
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- bbox_head.conv_reg.bias:weight_decay=0.0
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- bbox_head.conv_centerness.bias:lr=0.02
2023/09/27 21:46:00 - mmengine - INFO - paramwise_options -- bbox_head.conv_centerness.bias:weight_decay=0.0
2023/09/27 21:46:01 - mmengine - INFO - load model from: open-mmlab://resnext101_64x4d
2023/09/27 21:46:01 - mmengine - INFO - Loads checkpoint by openmmlab backend from path: open-mmlab://resnext101_64x4d
Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.conv1.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.conv2.weight - torch.Size([256, 4, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.conv3.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.1.conv1.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.1.conv2.weight - torch.Size([256, 4, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.1.conv3.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.2.conv1.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.2.conv2.weight - torch.Size([256, 4, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.2.conv3.weight - torch.Size([256, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.conv1.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.conv2.weight - torch.Size([512, 8, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.conv3.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.1.conv1.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.1.conv2.weight - torch.Size([512, 8, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.1.conv3.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.2.conv1.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.2.conv2.weight - torch.Size([512, 8, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.2.conv3.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.3.conv1.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.3.bn1.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.3.bn1.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.3.conv2.weight - torch.Size([512, 8, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.3.bn2.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.3.bn2.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.3.conv3.weight - torch.Size([512, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.conv1.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.1.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.1.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.1.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.1.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.1.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.1.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.1.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.2.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.2.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.2.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.2.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.2.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.2.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.2.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.3.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.3.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.3.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.3.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.3.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.3.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.3.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.4.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.4.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.4.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.4.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.4.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.4.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.4.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.5.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.5.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.5.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.5.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.5.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.5.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.5.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.6.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.6.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.6.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.6.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.6.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.6.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.6.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.6.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.6.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.7.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.7.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.7.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.7.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.7.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.7.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.7.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.7.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.7.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.8.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.8.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.8.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.8.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.8.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.8.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.8.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.8.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.8.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.9.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.9.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.9.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.9.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.9.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.9.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.9.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.9.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.9.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.10.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.10.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.10.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.10.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.10.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.10.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.10.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.10.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.10.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.11.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.11.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.11.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.11.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.11.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.11.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.11.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.11.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.11.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.12.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.12.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.12.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.12.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.12.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.12.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.12.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.12.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.12.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.13.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.13.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.13.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.13.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.13.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.13.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.13.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.13.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.13.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.14.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.14.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.14.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.14.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.14.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.14.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.14.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.14.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.14.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.15.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.15.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.15.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.15.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.15.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.15.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.15.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.15.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.15.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.16.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.16.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.16.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.16.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.16.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.16.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.16.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.16.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.16.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.17.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.17.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.17.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.17.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.17.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.17.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.17.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.17.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.17.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.18.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.18.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.18.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.18.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.18.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.18.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.18.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.18.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.18.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.19.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.19.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.19.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.19.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.19.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.19.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.19.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.19.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.19.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.20.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.20.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.20.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.20.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.20.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.20.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.20.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.20.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.20.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.21.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.21.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.21.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.21.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.21.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.21.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.21.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.21.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.21.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.22.conv1.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.22.bn1.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.22.bn1.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.22.conv2.weight - torch.Size([1024, 16, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.22.bn2.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.22.bn2.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.22.conv3.weight - torch.Size([1024, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.22.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer3.22.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.conv1.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.bn1.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.bn1.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.conv2.weight - torch.Size([2048, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.bn2.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.bn2.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.conv3.weight - torch.Size([2048, 2048, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.1.conv1.weight - torch.Size([2048, 2048, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.1.bn1.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.1.bn1.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.1.conv2.weight - torch.Size([2048, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.1.bn2.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.1.bn2.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.1.conv3.weight - torch.Size([2048, 2048, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.2.conv1.weight - torch.Size([2048, 2048, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.2.bn1.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.2.bn1.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.2.conv2.weight - torch.Size([2048, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.2.bn2.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.2.bn2.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.2.conv3.weight - torch.Size([2048, 2048, 1, 1]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from open-mmlab://resnext101_64x4d 

neck.lateral_convs.0.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

neck.lateral_convs.1.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

neck.lateral_convs.2.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

neck.fpn_convs.4.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.4.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.cls_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.cls_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.cls_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.cls_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.cls_convs.1.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.cls_convs.1.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.cls_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.cls_convs.2.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.cls_convs.2.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.cls_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.cls_convs.3.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.cls_convs.3.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.reg_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.reg_convs.0.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.reg_convs.0.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.reg_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.reg_convs.1.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.reg_convs.1.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.reg_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.reg_convs.2.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.reg_convs.2.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.reg_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.reg_convs.3.gn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.reg_convs.3.gn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.conv_cls.weight - torch.Size([4, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=-4.59511985013459 

bbox_head.conv_cls.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.01, bias=-4.59511985013459 

bbox_head.conv_reg.weight - torch.Size([4, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.conv_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.conv_centerness.weight - torch.Size([1, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.conv_centerness.bias - torch.Size([1]): 
NormalInit: mean=0, std=0.01, bias=0 

bbox_head.scales.0.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.scales.1.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.scales.2.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.scales.3.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of FCOS  

bbox_head.scales.4.scale - torch.Size([]): 
The value is the same before and after calling `init_weights` of FCOS  
2023/09/27 21:46:02 - mmengine - INFO - Load checkpoint from best_coco_bbox_mAP_epoch_10.pth
2023/09/27 21:46:02 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2023/09/27 21:46:02 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2023/09/27 21:46:02 - mmengine - INFO - Checkpoints will be saved to /home/001891254/cmpe249_hw1/mmdetection/work_dirs/fcos_x101-64x4d_fpn_gn-head-1x_tune_waymococo_hj.
2023/09/27 21:47:24 - mmengine - INFO - Epoch(train)  [1][ 50/500]  base_lr: 9.9098e-04 lr: 9.9098e-04  eta: 2:15:46  time: 1.6457  data_time: 0.0152  memory: 9236  grad_norm: 2.7599  loss: 0.8721  loss_cls: 0.0748  loss_bbox: 0.2236  loss_centerness: 0.5737
2023/09/27 21:48:45 - mmengine - INFO - Epoch(train)  [1][100/500]  base_lr: 1.9920e-03 lr: 1.9920e-03  eta: 2:13:08  time: 1.6151  data_time: 0.0052  memory: 9232  grad_norm: 3.5962  loss: 0.9059  loss_cls: 0.0813  loss_bbox: 0.2492  loss_centerness: 0.5754
2023/09/27 21:50:05 - mmengine - INFO - Epoch(train)  [1][150/500]  base_lr: 2.9930e-03 lr: 2.9930e-03  eta: 2:11:11  time: 1.6083  data_time: 0.0052  memory: 9232  grad_norm: 3.5186  loss: 0.9234  loss_cls: 0.0751  loss_bbox: 0.2760  loss_centerness: 0.5723
2023/09/27 21:51:26 - mmengine - INFO - Epoch(train)  [1][200/500]  base_lr: 3.9940e-03 lr: 3.9940e-03  eta: 2:09:44  time: 1.6184  data_time: 0.0051  memory: 9232  grad_norm: 3.9984  loss: 0.9609  loss_cls: 0.0781  loss_bbox: 0.3092  loss_centerness: 0.5736
2023/09/27 21:52:46 - mmengine - INFO - Epoch(train)  [1][250/500]  base_lr: 4.9950e-03 lr: 4.9950e-03  eta: 2:08:05  time: 1.6021  data_time: 0.0051  memory: 9232  grad_norm: 3.9249  loss: 1.0007  loss_cls: 0.0947  loss_bbox: 0.3314  loss_centerness: 0.5746
2023/09/27 21:54:05 - mmengine - INFO - Epoch(train)  [1][300/500]  base_lr: 5.9960e-03 lr: 5.9960e-03  eta: 2:06:08  time: 1.5722  data_time: 0.0051  memory: 9232  grad_norm: 4.0533  loss: 1.0401  loss_cls: 0.1245  loss_bbox: 0.3339  loss_centerness: 0.5817
2023/09/27 21:55:26 - mmengine - INFO - Epoch(train)  [1][350/500]  base_lr: 6.9970e-03 lr: 6.9970e-03  eta: 2:04:49  time: 1.6131  data_time: 0.0051  memory: 9232  grad_norm: 3.9107  loss: 1.0626  loss_cls: 0.1033  loss_bbox: 0.3797  loss_centerness: 0.5797
2023/09/27 21:56:45 - mmengine - INFO - Epoch(train)  [1][400/500]  base_lr: 7.9980e-03 lr: 7.9980e-03  eta: 2:03:21  time: 1.5968  data_time: 0.0051  memory: 9232  grad_norm: 3.8777  loss: 1.1002  loss_cls: 0.1153  loss_bbox: 0.4017  loss_centerness: 0.5832
2023/09/27 21:58:07 - mmengine - INFO - Epoch(train)  [1][450/500]  base_lr: 8.9990e-03 lr: 8.9990e-03  eta: 2:02:07  time: 1.6223  data_time: 0.0052  memory: 9232  grad_norm: 3.3690  loss: 1.0562  loss_cls: 0.1046  loss_bbox: 0.3773  loss_centerness: 0.5743
2023/09/27 21:59:26 - mmengine - INFO - Exp name: fcos_x101-64x4d_fpn_gn-head-1x_tune_waymococo_hj_20230927_214555
2023/09/27 21:59:26 - mmengine - INFO - Epoch(train)  [1][500/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 2:00:39  time: 1.5942  data_time: 0.0051  memory: 9232  grad_norm: 3.7455  loss: 1.0800  loss_cls: 0.1137  loss_bbox: 0.3882  loss_centerness: 0.5781
2023/09/27 21:59:26 - mmengine - INFO - Saving checkpoint at 1 epochs
2023/09/27 21:59:45 - mmengine - INFO - Epoch(val)  [1][  50/1000]    eta: 0:04:54  time: 0.3101  data_time: 0.0114  memory: 1349  
2023/09/27 22:00:00 - mmengine - INFO - Epoch(val)  [1][ 100/1000]    eta: 0:04:34  time: 0.3004  data_time: 0.0018  memory: 1349  
2023/09/27 22:00:15 - mmengine - INFO - Epoch(val)  [1][ 150/1000]    eta: 0:04:18  time: 0.3004  data_time: 0.0018  memory: 1349  
2023/09/27 22:00:30 - mmengine - INFO - Epoch(val)  [1][ 200/1000]    eta: 0:04:02  time: 0.3006  data_time: 0.0018  memory: 1349  
2023/09/27 22:00:45 - mmengine - INFO - Epoch(val)  [1][ 250/1000]    eta: 0:03:46  time: 0.3005  data_time: 0.0018  memory: 1349  
2023/09/27 22:01:00 - mmengine - INFO - Epoch(val)  [1][ 300/1000]    eta: 0:03:31  time: 0.3003  data_time: 0.0018  memory: 1349  
2023/09/27 22:01:15 - mmengine - INFO - Epoch(val)  [1][ 350/1000]    eta: 0:03:16  time: 0.3005  data_time: 0.0018  memory: 1349  
2023/09/27 22:01:30 - mmengine - INFO - Epoch(val)  [1][ 400/1000]    eta: 0:03:00  time: 0.3002  data_time: 0.0018  memory: 1349  
2023/09/27 22:01:45 - mmengine - INFO - Epoch(val)  [1][ 450/1000]    eta: 0:02:45  time: 0.3005  data_time: 0.0018  memory: 1349  
2023/09/27 22:02:00 - mmengine - INFO - Epoch(val)  [1][ 500/1000]    eta: 0:02:30  time: 0.3002  data_time: 0.0018  memory: 1349  
2023/09/27 22:02:15 - mmengine - INFO - Epoch(val)  [1][ 550/1000]    eta: 0:02:15  time: 0.3004  data_time: 0.0018  memory: 1349  
2023/09/27 22:02:30 - mmengine - INFO - Epoch(val)  [1][ 600/1000]    eta: 0:02:00  time: 0.3004  data_time: 0.0018  memory: 1349  
2023/09/27 22:02:45 - mmengine - INFO - Epoch(val)  [1][ 650/1000]    eta: 0:01:45  time: 0.3000  data_time: 0.0018  memory: 1349  
2023/09/27 22:03:00 - mmengine - INFO - Epoch(val)  [1][ 700/1000]    eta: 0:01:30  time: 0.3001  data_time: 0.0018  memory: 1349  
2023/09/27 22:03:15 - mmengine - INFO - Epoch(val)  [1][ 750/1000]    eta: 0:01:15  time: 0.2994  data_time: 0.0018  memory: 1349  
2023/09/27 22:03:30 - mmengine - INFO - Epoch(val)  [1][ 800/1000]    eta: 0:01:00  time: 0.3016  data_time: 0.0018  memory: 1349  
2023/09/27 22:03:45 - mmengine - INFO - Epoch(val)  [1][ 850/1000]    eta: 0:00:45  time: 0.3005  data_time: 0.0019  memory: 1349  
2023/09/27 22:04:00 - mmengine - INFO - Epoch(val)  [1][ 900/1000]    eta: 0:00:30  time: 0.3001  data_time: 0.0018  memory: 1349  
2023/09/27 22:04:15 - mmengine - INFO - Epoch(val)  [1][ 950/1000]    eta: 0:00:15  time: 0.3000  data_time: 0.0018  memory: 1349  
2023/09/27 22:04:30 - mmengine - INFO - Epoch(val)  [1][1000/1000]    eta: 0:00:00  time: 0.2989  data_time: 0.0018  memory: 1349  
2023/09/27 22:04:31 - mmengine - INFO - Evaluating bbox...
2023/09/27 22:04:45 - mmengine - INFO - bbox_mAP_copypaste: 0.312 0.721 0.253 0.017 0.325 0.316
2023/09/27 22:04:45 - mmengine - INFO - Epoch(val) [1][1000/1000]    coco/bbox_mAP: 0.3120  coco/bbox_mAP_50: 0.7210  coco/bbox_mAP_75: 0.2530  coco/bbox_mAP_s: 0.0170  coco/bbox_mAP_m: 0.3250  coco/bbox_mAP_l: 0.3160  data_time: 0.0023  time: 0.3008
2023/09/27 22:04:46 - mmengine - INFO - The best checkpoint with 0.3120 coco/bbox_mAP at 1 epoch is saved to best_coco_bbox_mAP_epoch_1.pth.
2023/09/27 22:06:09 - mmengine - INFO - Epoch(train)  [2][ 50/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:59:14  time: 1.5968  data_time: 0.0066  memory: 9232  grad_norm: 3.7974  loss: 1.2026  loss_cls: 0.1173  loss_bbox: 0.5015  loss_centerness: 0.5838
2023/09/27 22:07:28 - mmengine - INFO - Epoch(train)  [2][100/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:57:46  time: 1.5881  data_time: 0.0045  memory: 9232  grad_norm: 3.4061  loss: 1.1131  loss_cls: 0.1167  loss_bbox: 0.4117  loss_centerness: 0.5846
2023/09/27 22:08:50 - mmengine - INFO - Epoch(train)  [2][150/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:56:32  time: 1.6233  data_time: 0.0045  memory: 9232  grad_norm: 3.9047  loss: 1.1402  loss_cls: 0.1127  loss_bbox: 0.4480  loss_centerness: 0.5795
2023/09/27 22:10:09 - mmengine - INFO - Epoch(train)  [2][200/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:55:05  time: 1.5874  data_time: 0.0045  memory: 9232  grad_norm: 3.5832  loss: 1.1273  loss_cls: 0.1138  loss_bbox: 0.4378  loss_centerness: 0.5757
2023/09/27 22:11:29 - mmengine - INFO - Epoch(train)  [2][250/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:53:42  time: 1.5970  data_time: 0.0045  memory: 9232  grad_norm: 3.2806  loss: 1.0990  loss_cls: 0.1129  loss_bbox: 0.4071  loss_centerness: 0.5790
2023/09/27 22:12:50 - mmengine - INFO - Epoch(train)  [2][300/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:52:28  time: 1.6286  data_time: 0.0045  memory: 9232  grad_norm: 3.4349  loss: 1.1150  loss_cls: 0.1242  loss_bbox: 0.4081  loss_centerness: 0.5827
2023/09/27 22:14:10 - mmengine - INFO - Epoch(train)  [2][350/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:51:07  time: 1.6016  data_time: 0.0045  memory: 9232  grad_norm: 3.5458  loss: 1.1080  loss_cls: 0.1137  loss_bbox: 0.4134  loss_centerness: 0.5809
2023/09/27 22:15:30 - mmengine - INFO - Epoch(train)  [2][400/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:49:43  time: 1.5930  data_time: 0.0045  memory: 9232  grad_norm: 3.3464  loss: 1.0959  loss_cls: 0.1202  loss_bbox: 0.3986  loss_centerness: 0.5772
2023/09/27 22:16:49 - mmengine - INFO - Epoch(train)  [2][450/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:48:18  time: 1.5840  data_time: 0.0045  memory: 9232  grad_norm: 3.1365  loss: 1.0740  loss_cls: 0.0986  loss_bbox: 0.3948  loss_centerness: 0.5806
2023/09/27 22:18:10 - mmengine - INFO - Exp name: fcos_x101-64x4d_fpn_gn-head-1x_tune_waymococo_hj_20230927_214555
2023/09/27 22:18:10 - mmengine - INFO - Epoch(train)  [2][500/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:46:58  time: 1.6061  data_time: 0.0045  memory: 9232  grad_norm: 3.1677  loss: 1.0614  loss_cls: 0.0983  loss_bbox: 0.3881  loss_centerness: 0.5750
2023/09/27 22:18:10 - mmengine - INFO - Saving checkpoint at 2 epochs
2023/09/27 22:18:28 - mmengine - INFO - Epoch(val)  [2][  50/1000]    eta: 0:04:47  time: 0.3028  data_time: 0.0032  memory: 1349  
2023/09/27 22:18:43 - mmengine - INFO - Epoch(val)  [2][ 100/1000]    eta: 0:04:31  time: 0.3005  data_time: 0.0019  memory: 1349  
2023/09/27 22:18:58 - mmengine - INFO - Epoch(val)  [2][ 150/1000]    eta: 0:04:16  time: 0.3004  data_time: 0.0019  memory: 1349  
2023/09/27 22:19:13 - mmengine - INFO - Epoch(val)  [2][ 200/1000]    eta: 0:04:00  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/27 22:19:28 - mmengine - INFO - Epoch(val)  [2][ 250/1000]    eta: 0:03:45  time: 0.3005  data_time: 0.0019  memory: 1349  
2023/09/27 22:19:43 - mmengine - INFO - Epoch(val)  [2][ 300/1000]    eta: 0:03:30  time: 0.3002  data_time: 0.0019  memory: 1349  
2023/09/27 22:19:58 - mmengine - INFO - Epoch(val)  [2][ 350/1000]    eta: 0:03:15  time: 0.3004  data_time: 0.0019  memory: 1349  
2023/09/27 22:20:13 - mmengine - INFO - Epoch(val)  [2][ 400/1000]    eta: 0:03:00  time: 0.3004  data_time: 0.0019  memory: 1349  
2023/09/27 22:20:28 - mmengine - INFO - Epoch(val)  [2][ 450/1000]    eta: 0:02:45  time: 0.3004  data_time: 0.0019  memory: 1349  
2023/09/27 22:20:43 - mmengine - INFO - Epoch(val)  [2][ 500/1000]    eta: 0:02:30  time: 0.3002  data_time: 0.0019  memory: 1349  
2023/09/27 22:20:58 - mmengine - INFO - Epoch(val)  [2][ 550/1000]    eta: 0:02:15  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/27 22:21:13 - mmengine - INFO - Epoch(val)  [2][ 600/1000]    eta: 0:02:00  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/27 22:21:28 - mmengine - INFO - Epoch(val)  [2][ 650/1000]    eta: 0:01:45  time: 0.2996  data_time: 0.0019  memory: 1349  
2023/09/27 22:21:43 - mmengine - INFO - Epoch(val)  [2][ 700/1000]    eta: 0:01:30  time: 0.2994  data_time: 0.0018  memory: 1349  
2023/09/27 22:21:58 - mmengine - INFO - Epoch(val)  [2][ 750/1000]    eta: 0:01:15  time: 0.2996  data_time: 0.0019  memory: 1349  
2023/09/27 22:22:13 - mmengine - INFO - Epoch(val)  [2][ 800/1000]    eta: 0:01:00  time: 0.3008  data_time: 0.0019  memory: 1349  
2023/09/27 22:22:28 - mmengine - INFO - Epoch(val)  [2][ 850/1000]    eta: 0:00:45  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/27 22:22:43 - mmengine - INFO - Epoch(val)  [2][ 900/1000]    eta: 0:00:30  time: 0.2995  data_time: 0.0019  memory: 1349  
2023/09/27 22:22:58 - mmengine - INFO - Epoch(val)  [2][ 950/1000]    eta: 0:00:15  time: 0.2997  data_time: 0.0018  memory: 1349  
2023/09/27 22:23:13 - mmengine - INFO - Epoch(val)  [2][1000/1000]    eta: 0:00:00  time: 0.2975  data_time: 0.0018  memory: 1349  
2023/09/27 22:23:14 - mmengine - INFO - Evaluating bbox...
2023/09/27 22:23:29 - mmengine - INFO - bbox_mAP_copypaste: 0.416 0.806 0.381 0.020 0.412 0.524
2023/09/27 22:23:29 - mmengine - INFO - Epoch(val) [2][1000/1000]    coco/bbox_mAP: 0.4160  coco/bbox_mAP_50: 0.8060  coco/bbox_mAP_75: 0.3810  coco/bbox_mAP_s: 0.0200  coco/bbox_mAP_m: 0.4120  coco/bbox_mAP_l: 0.5240  data_time: 0.0019  time: 0.3001
2023/09/27 22:23:29 - mmengine - INFO - The previous best checkpoint /home/001891254/cmpe249_hw1/mmdetection/work_dirs/fcos_x101-64x4d_fpn_gn-head-1x_tune_waymococo_hj/best_coco_bbox_mAP_epoch_1.pth is removed
2023/09/27 22:23:30 - mmengine - INFO - The best checkpoint with 0.4160 coco/bbox_mAP at 2 epoch is saved to best_coco_bbox_mAP_epoch_2.pth.
2023/09/27 22:24:53 - mmengine - INFO - Epoch(train)  [3][ 50/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:45:31  time: 1.5663  data_time: 0.0071  memory: 9232  grad_norm: 3.3074  loss: 1.1010  loss_cls: 0.0958  loss_bbox: 0.4298  loss_centerness: 0.5755
2023/09/27 22:26:13 - mmengine - INFO - Epoch(train)  [3][100/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:44:12  time: 1.6087  data_time: 0.0045  memory: 9232  grad_norm: 3.1213  loss: 1.0116  loss_cls: 0.0869  loss_bbox: 0.3535  loss_centerness: 0.5712
2023/09/27 22:27:33 - mmengine - INFO - Epoch(train)  [3][150/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:42:52  time: 1.6041  data_time: 0.0045  memory: 9232  grad_norm: 3.0040  loss: 1.0935  loss_cls: 0.1097  loss_bbox: 0.4031  loss_centerness: 0.5807
2023/09/27 22:28:53 - mmengine - INFO - Epoch(train)  [3][200/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:41:32  time: 1.6035  data_time: 0.0046  memory: 9232  grad_norm: 3.1079  loss: 1.0639  loss_cls: 0.1024  loss_bbox: 0.3849  loss_centerness: 0.5767
2023/09/27 22:30:14 - mmengine - INFO - Epoch(train)  [3][250/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:40:13  time: 1.6152  data_time: 0.0045  memory: 9232  grad_norm: 3.3720  loss: 1.0609  loss_cls: 0.1042  loss_bbox: 0.3812  loss_centerness: 0.5755
2023/09/27 22:31:33 - mmengine - INFO - Epoch(train)  [3][300/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:38:49  time: 1.5719  data_time: 0.0046  memory: 9232  grad_norm: 3.1681  loss: 1.0582  loss_cls: 0.1001  loss_bbox: 0.3816  loss_centerness: 0.5765
2023/09/27 22:32:53 - mmengine - INFO - Epoch(train)  [3][350/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:37:29  time: 1.6035  data_time: 0.0045  memory: 9232  grad_norm: 2.9478  loss: 1.0455  loss_cls: 0.0945  loss_bbox: 0.3797  loss_centerness: 0.5713
2023/09/27 22:34:13 - mmengine - INFO - Epoch(train)  [3][400/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:36:07  time: 1.5938  data_time: 0.0089  memory: 9232  grad_norm: 2.9010  loss: 0.9969  loss_cls: 0.0902  loss_bbox: 0.3328  loss_centerness: 0.5740
2023/09/27 22:35:33 - mmengine - INFO - Epoch(train)  [3][450/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:34:49  time: 1.6171  data_time: 0.0046  memory: 9232  grad_norm: 3.0482  loss: 0.9885  loss_cls: 0.0900  loss_bbox: 0.3235  loss_centerness: 0.5750
2023/09/27 22:36:54 - mmengine - INFO - Exp name: fcos_x101-64x4d_fpn_gn-head-1x_tune_waymococo_hj_20230927_214555
2023/09/27 22:36:54 - mmengine - INFO - Epoch(train)  [3][500/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:33:30  time: 1.6133  data_time: 0.0045  memory: 9232  grad_norm: 3.0105  loss: 1.0376  loss_cls: 0.0958  loss_bbox: 0.3675  loss_centerness: 0.5743
2023/09/27 22:36:54 - mmengine - INFO - Saving checkpoint at 3 epochs
2023/09/27 22:37:12 - mmengine - INFO - Epoch(val)  [3][  50/1000]    eta: 0:04:47  time: 0.3030  data_time: 0.0032  memory: 1349  
2023/09/27 22:37:27 - mmengine - INFO - Epoch(val)  [3][ 100/1000]    eta: 0:04:31  time: 0.3000  data_time: 0.0019  memory: 1349  
2023/09/27 22:37:42 - mmengine - INFO - Epoch(val)  [3][ 150/1000]    eta: 0:04:16  time: 0.3007  data_time: 0.0019  memory: 1349  
2023/09/27 22:37:57 - mmengine - INFO - Epoch(val)  [3][ 200/1000]    eta: 0:04:00  time: 0.3002  data_time: 0.0019  memory: 1349  
2023/09/27 22:38:12 - mmengine - INFO - Epoch(val)  [3][ 250/1000]    eta: 0:03:45  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/27 22:38:27 - mmengine - INFO - Epoch(val)  [3][ 300/1000]    eta: 0:03:30  time: 0.3001  data_time: 0.0019  memory: 1349  
2023/09/27 22:38:42 - mmengine - INFO - Epoch(val)  [3][ 350/1000]    eta: 0:03:15  time: 0.2999  data_time: 0.0019  memory: 1349  
2023/09/27 22:38:57 - mmengine - INFO - Epoch(val)  [3][ 400/1000]    eta: 0:03:00  time: 0.3006  data_time: 0.0019  memory: 1349  
2023/09/27 22:39:12 - mmengine - INFO - Epoch(val)  [3][ 450/1000]    eta: 0:02:45  time: 0.3006  data_time: 0.0019  memory: 1349  
2023/09/27 22:39:27 - mmengine - INFO - Epoch(val)  [3][ 500/1000]    eta: 0:02:30  time: 0.3002  data_time: 0.0019  memory: 1349  
2023/09/27 22:39:42 - mmengine - INFO - Epoch(val)  [3][ 550/1000]    eta: 0:02:15  time: 0.3000  data_time: 0.0019  memory: 1349  
2023/09/27 22:39:57 - mmengine - INFO - Epoch(val)  [3][ 600/1000]    eta: 0:02:00  time: 0.3006  data_time: 0.0019  memory: 1349  
2023/09/27 22:40:12 - mmengine - INFO - Epoch(val)  [3][ 650/1000]    eta: 0:01:45  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/27 22:40:27 - mmengine - INFO - Epoch(val)  [3][ 700/1000]    eta: 0:01:30  time: 0.2996  data_time: 0.0019  memory: 1349  
2023/09/27 22:40:42 - mmengine - INFO - Epoch(val)  [3][ 750/1000]    eta: 0:01:15  time: 0.2989  data_time: 0.0019  memory: 1349  
2023/09/27 22:40:57 - mmengine - INFO - Epoch(val)  [3][ 800/1000]    eta: 0:01:00  time: 0.3007  data_time: 0.0019  memory: 1349  
2023/09/27 22:41:12 - mmengine - INFO - Epoch(val)  [3][ 850/1000]    eta: 0:00:45  time: 0.3004  data_time: 0.0019  memory: 1349  
2023/09/27 22:41:27 - mmengine - INFO - Epoch(val)  [3][ 900/1000]    eta: 0:00:30  time: 0.3002  data_time: 0.0019  memory: 1349  
2023/09/27 22:41:42 - mmengine - INFO - Epoch(val)  [3][ 950/1000]    eta: 0:00:15  time: 0.2999  data_time: 0.0019  memory: 1349  
2023/09/27 22:41:57 - mmengine - INFO - Epoch(val)  [3][1000/1000]    eta: 0:00:00  time: 0.2977  data_time: 0.0018  memory: 1349  
2023/09/27 22:41:59 - mmengine - INFO - Evaluating bbox...
2023/09/27 22:42:12 - mmengine - INFO - bbox_mAP_copypaste: 0.312 0.778 0.100 0.019 0.277 0.452
2023/09/27 22:42:12 - mmengine - INFO - Epoch(val) [3][1000/1000]    coco/bbox_mAP: 0.3120  coco/bbox_mAP_50: 0.7780  coco/bbox_mAP_75: 0.1000  coco/bbox_mAP_s: 0.0190  coco/bbox_mAP_m: 0.2770  coco/bbox_mAP_l: 0.4520  data_time: 0.0019  time: 0.3002
2023/09/27 22:43:32 - mmengine - INFO - Epoch(train)  [4][ 50/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:32:10  time: 1.6018  data_time: 0.0066  memory: 9232  grad_norm: 3.2940  loss: 1.0657  loss_cls: 0.0876  loss_bbox: 0.4005  loss_centerness: 0.5777
2023/09/27 22:44:52 - mmengine - INFO - Epoch(train)  [4][100/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:30:50  time: 1.6100  data_time: 0.0045  memory: 9232  grad_norm: 3.6091  loss: 1.0994  loss_cls: 0.0993  loss_bbox: 0.4244  loss_centerness: 0.5757
2023/09/27 22:46:13 - mmengine - INFO - Epoch(train)  [4][150/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:29:31  time: 1.6096  data_time: 0.0045  memory: 9232  grad_norm: 2.9033  loss: 0.9875  loss_cls: 0.0845  loss_bbox: 0.3338  loss_centerness: 0.5691
2023/09/27 22:47:33 - mmengine - INFO - Epoch(train)  [4][200/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:28:10  time: 1.5955  data_time: 0.0045  memory: 9232  grad_norm: 3.5104  loss: 1.1265  loss_cls: 0.0961  loss_bbox: 0.4577  loss_centerness: 0.5727
2023/09/27 22:48:52 - mmengine - INFO - Epoch(train)  [4][250/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:26:49  time: 1.5932  data_time: 0.0045  memory: 9232  grad_norm: 3.1508  loss: 1.0475  loss_cls: 0.0863  loss_bbox: 0.3883  loss_centerness: 0.5729
2023/09/27 22:50:13 - mmengine - INFO - Epoch(train)  [4][300/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:25:29  time: 1.6051  data_time: 0.0046  memory: 9232  grad_norm: 2.7325  loss: 1.0030  loss_cls: 0.0914  loss_bbox: 0.3397  loss_centerness: 0.5719
2023/09/27 22:51:33 - mmengine - INFO - Epoch(train)  [4][350/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:24:09  time: 1.6079  data_time: 0.0045  memory: 9232  grad_norm: 2.7293  loss: 0.9825  loss_cls: 0.0760  loss_bbox: 0.3367  loss_centerness: 0.5698
2023/09/27 22:52:52 - mmengine - INFO - Epoch(train)  [4][400/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:22:48  time: 1.5836  data_time: 0.0046  memory: 9232  grad_norm: 2.9546  loss: 0.9589  loss_cls: 0.0842  loss_bbox: 0.3005  loss_centerness: 0.5741
2023/09/27 22:54:12 - mmengine - INFO - Epoch(train)  [4][450/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:21:27  time: 1.5994  data_time: 0.0045  memory: 9232  grad_norm: 3.1285  loss: 0.9826  loss_cls: 0.0845  loss_bbox: 0.3281  loss_centerness: 0.5700
2023/09/27 22:55:33 - mmengine - INFO - Exp name: fcos_x101-64x4d_fpn_gn-head-1x_tune_waymococo_hj_20230927_214555
2023/09/27 22:55:33 - mmengine - INFO - Epoch(train)  [4][500/500]  base_lr: 1.0000e-02 lr: 1.0000e-02  eta: 1:20:08  time: 1.6152  data_time: 0.0045  memory: 9232  grad_norm: 3.1118  loss: 0.9932  loss_cls: 0.0871  loss_bbox: 0.3316  loss_centerness: 0.5745
2023/09/27 22:55:33 - mmengine - INFO - Saving checkpoint at 4 epochs
2023/09/27 22:55:51 - mmengine - INFO - Epoch(val)  [4][  50/1000]    eta: 0:04:46  time: 0.3019  data_time: 0.0032  memory: 1349  
2023/09/27 22:56:06 - mmengine - INFO - Epoch(val)  [4][ 100/1000]    eta: 0:04:30  time: 0.3002  data_time: 0.0019  memory: 1349  
2023/09/27 22:56:21 - mmengine - INFO - Epoch(val)  [4][ 150/1000]    eta: 0:04:15  time: 0.3005  data_time: 0.0019  memory: 1349  
2023/09/27 22:56:36 - mmengine - INFO - Epoch(val)  [4][ 200/1000]    eta: 0:04:00  time: 0.3001  data_time: 0.0019  memory: 1349  
2023/09/27 22:56:52 - mmengine - INFO - Epoch(val)  [4][ 250/1000]    eta: 0:03:45  time: 0.3005  data_time: 0.0019  memory: 1349  
2023/09/27 22:57:07 - mmengine - INFO - Epoch(val)  [4][ 300/1000]    eta: 0:03:30  time: 0.3001  data_time: 0.0019  memory: 1349  
2023/09/27 22:57:22 - mmengine - INFO - Epoch(val)  [4][ 350/1000]    eta: 0:03:15  time: 0.3006  data_time: 0.0020  memory: 1349  
2023/09/27 22:57:37 - mmengine - INFO - Epoch(val)  [4][ 400/1000]    eta: 0:03:00  time: 0.3004  data_time: 0.0019  memory: 1349  
2023/09/27 22:57:52 - mmengine - INFO - Epoch(val)  [4][ 450/1000]    eta: 0:02:45  time: 0.3005  data_time: 0.0020  memory: 1349  
2023/09/27 22:58:07 - mmengine - INFO - Epoch(val)  [4][ 500/1000]    eta: 0:02:30  time: 0.3002  data_time: 0.0019  memory: 1349  
2023/09/27 22:58:22 - mmengine - INFO - Epoch(val)  [4][ 550/1000]    eta: 0:02:15  time: 0.3004  data_time: 0.0019  memory: 1349  
2023/09/27 22:58:37 - mmengine - INFO - Epoch(val)  [4][ 600/1000]    eta: 0:02:00  time: 0.3001  data_time: 0.0020  memory: 1349  
2023/09/27 22:58:52 - mmengine - INFO - Epoch(val)  [4][ 650/1000]    eta: 0:01:45  time: 0.3002  data_time: 0.0019  memory: 1349  
2023/09/27 22:59:07 - mmengine - INFO - Epoch(val)  [4][ 700/1000]    eta: 0:01:30  time: 0.3000  data_time: 0.0019  memory: 1349  
2023/09/27 22:59:22 - mmengine - INFO - Epoch(val)  [4][ 750/1000]    eta: 0:01:15  time: 0.2999  data_time: 0.0019  memory: 1349  
2023/09/27 22:59:37 - mmengine - INFO - Epoch(val)  [4][ 800/1000]    eta: 0:01:00  time: 0.3016  data_time: 0.0020  memory: 1349  
2023/09/27 22:59:52 - mmengine - INFO - Epoch(val)  [4][ 850/1000]    eta: 0:00:45  time: 0.3005  data_time: 0.0020  memory: 1349  
2023/09/27 23:00:07 - mmengine - INFO - Epoch(val)  [4][ 900/1000]    eta: 0:00:30  time: 0.3002  data_time: 0.0019  memory: 1349  
2023/09/27 23:00:22 - mmengine - INFO - Epoch(val)  [4][ 950/1000]    eta: 0:00:15  time: 0.2997  data_time: 0.0019  memory: 1349  
2023/09/27 23:00:37 - mmengine - INFO - Epoch(val)  [4][1000/1000]    eta: 0:00:00  time: 0.2971  data_time: 0.0018  memory: 1349  
2023/09/27 23:00:38 - mmengine - INFO - Evaluating bbox...
2023/09/27 23:00:50 - mmengine - INFO - bbox_mAP_copypaste: 0.418 0.766 0.449 0.028 0.385 0.607
2023/09/27 23:00:50 - mmengine - INFO - Epoch(val) [4][1000/1000]    coco/bbox_mAP: 0.4180  coco/bbox_mAP_50: 0.7660  coco/bbox_mAP_75: 0.4490  coco/bbox_mAP_s: 0.0280  coco/bbox_mAP_m: 0.3850  coco/bbox_mAP_l: 0.6070  data_time: 0.0020  time: 0.3002
2023/09/27 23:00:50 - mmengine - INFO - The previous best checkpoint /home/001891254/cmpe249_hw1/mmdetection/work_dirs/fcos_x101-64x4d_fpn_gn-head-1x_tune_waymococo_hj/best_coco_bbox_mAP_epoch_2.pth is removed
2023/09/27 23:00:51 - mmengine - INFO - The best checkpoint with 0.4180 coco/bbox_mAP at 4 epoch is saved to best_coco_bbox_mAP_epoch_4.pth.
2023/09/27 23:02:14 - mmengine - INFO - Epoch(train)  [5][ 50/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 1:18:47  time: 1.5951  data_time: 0.0069  memory: 9232  grad_norm: 2.3903  loss: 0.8960  loss_cls: 0.0787  loss_bbox: 0.2461  loss_centerness: 0.5712
2023/09/27 23:03:34 - mmengine - INFO - Epoch(train)  [5][100/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 1:17:26  time: 1.5918  data_time: 0.0045  memory: 9232  grad_norm: 1.8866  loss: 0.8684  loss_cls: 0.0614  loss_bbox: 0.2368  loss_centerness: 0.5702
2023/09/27 23:04:54 - mmengine - INFO - Epoch(train)  [5][150/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 1:16:06  time: 1.5995  data_time: 0.0047  memory: 9232  grad_norm: 1.8612  loss: 0.8401  loss_cls: 0.0586  loss_bbox: 0.2132  loss_centerness: 0.5684
2023/09/27 23:06:13 - mmengine - INFO - Epoch(train)  [5][200/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 1:14:45  time: 1.5871  data_time: 0.0045  memory: 9232  grad_norm: 2.2324  loss: 0.8515  loss_cls: 0.0596  loss_bbox: 0.2228  loss_centerness: 0.5691
2023/09/27 23:07:32 - mmengine - INFO - Epoch(train)  [5][250/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 1:13:24  time: 1.5841  data_time: 0.0045  memory: 9232  grad_norm: 2.1746  loss: 0.8348  loss_cls: 0.0621  loss_bbox: 0.2028  loss_centerness: 0.5698
2023/09/27 23:08:52 - mmengine - INFO - Epoch(train)  [5][300/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 1:12:03  time: 1.5902  data_time: 0.0045  memory: 9232  grad_norm: 2.1282  loss: 0.8150  loss_cls: 0.0572  loss_bbox: 0.1930  loss_centerness: 0.5648
2023/09/27 23:10:13 - mmengine - INFO - Epoch(train)  [5][350/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 1:10:44  time: 1.6184  data_time: 0.0045  memory: 9232  grad_norm: 2.1279  loss: 0.8220  loss_cls: 0.0579  loss_bbox: 0.1984  loss_centerness: 0.5657
2023/09/27 23:11:32 - mmengine - INFO - Epoch(train)  [5][400/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 1:09:24  time: 1.5950  data_time: 0.0045  memory: 9232  grad_norm: 2.4398  loss: 0.8267  loss_cls: 0.0632  loss_bbox: 0.1976  loss_centerness: 0.5659
2023/09/27 23:12:54 - mmengine - INFO - Epoch(train)  [5][450/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 1:08:05  time: 1.6259  data_time: 0.0046  memory: 9232  grad_norm: 2.4273  loss: 0.8260  loss_cls: 0.0612  loss_bbox: 0.1999  loss_centerness: 0.5649
2023/09/27 23:14:13 - mmengine - INFO - Exp name: fcos_x101-64x4d_fpn_gn-head-1x_tune_waymococo_hj_20230927_214555
2023/09/27 23:14:13 - mmengine - INFO - Epoch(train)  [5][500/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 1:06:44  time: 1.5938  data_time: 0.0045  memory: 9232  grad_norm: 2.0506  loss: 0.8457  loss_cls: 0.0598  loss_bbox: 0.2178  loss_centerness: 0.5681
2023/09/27 23:14:13 - mmengine - INFO - Saving checkpoint at 5 epochs
2023/09/27 23:14:31 - mmengine - INFO - Epoch(val)  [5][  50/1000]    eta: 0:04:45  time: 0.3009  data_time: 0.0032  memory: 1349  
2023/09/27 23:14:46 - mmengine - INFO - Epoch(val)  [5][ 100/1000]    eta: 0:04:30  time: 0.3002  data_time: 0.0019  memory: 1349  
2023/09/27 23:15:01 - mmengine - INFO - Epoch(val)  [5][ 150/1000]    eta: 0:04:15  time: 0.3005  data_time: 0.0019  memory: 1349  
2023/09/27 23:15:16 - mmengine - INFO - Epoch(val)  [5][ 200/1000]    eta: 0:04:00  time: 0.2994  data_time: 0.0019  memory: 1349  
2023/09/27 23:15:31 - mmengine - INFO - Epoch(val)  [5][ 250/1000]    eta: 0:03:45  time: 0.3007  data_time: 0.0019  memory: 1349  
2023/09/27 23:15:46 - mmengine - INFO - Epoch(val)  [5][ 300/1000]    eta: 0:03:30  time: 0.3001  data_time: 0.0019  memory: 1349  
2023/09/27 23:16:01 - mmengine - INFO - Epoch(val)  [5][ 350/1000]    eta: 0:03:15  time: 0.2998  data_time: 0.0019  memory: 1349  
2023/09/27 23:16:16 - mmengine - INFO - Epoch(val)  [5][ 400/1000]    eta: 0:03:00  time: 0.2999  data_time: 0.0019  memory: 1349  
2023/09/27 23:16:31 - mmengine - INFO - Epoch(val)  [5][ 450/1000]    eta: 0:02:45  time: 0.3004  data_time: 0.0019  memory: 1349  
2023/09/27 23:16:46 - mmengine - INFO - Epoch(val)  [5][ 500/1000]    eta: 0:02:30  time: 0.3002  data_time: 0.0019  memory: 1349  
2023/09/27 23:17:01 - mmengine - INFO - Epoch(val)  [5][ 550/1000]    eta: 0:02:15  time: 0.2996  data_time: 0.0019  memory: 1349  
2023/09/27 23:17:16 - mmengine - INFO - Epoch(val)  [5][ 600/1000]    eta: 0:02:00  time: 0.2988  data_time: 0.0019  memory: 1349  
2023/09/27 23:17:31 - mmengine - INFO - Epoch(val)  [5][ 650/1000]    eta: 0:01:44  time: 0.2991  data_time: 0.0018  memory: 1349  
2023/09/27 23:17:46 - mmengine - INFO - Epoch(val)  [5][ 700/1000]    eta: 0:01:29  time: 0.2988  data_time: 0.0018  memory: 1349  
2023/09/27 23:18:01 - mmengine - INFO - Epoch(val)  [5][ 750/1000]    eta: 0:01:14  time: 0.2980  data_time: 0.0018  memory: 1349  
2023/09/27 23:18:16 - mmengine - INFO - Epoch(val)  [5][ 800/1000]    eta: 0:00:59  time: 0.2994  data_time: 0.0019  memory: 1349  
2023/09/27 23:18:31 - mmengine - INFO - Epoch(val)  [5][ 850/1000]    eta: 0:00:44  time: 0.3002  data_time: 0.0019  memory: 1349  
2023/09/27 23:18:46 - mmengine - INFO - Epoch(val)  [5][ 900/1000]    eta: 0:00:29  time: 0.2999  data_time: 0.0019  memory: 1349  
2023/09/27 23:19:01 - mmengine - INFO - Epoch(val)  [5][ 950/1000]    eta: 0:00:14  time: 0.2994  data_time: 0.0019  memory: 1349  
2023/09/27 23:19:16 - mmengine - INFO - Epoch(val)  [5][1000/1000]    eta: 0:00:00  time: 0.2977  data_time: 0.0019  memory: 1349  
2023/09/27 23:19:17 - mmengine - INFO - Evaluating bbox...
2023/09/27 23:19:28 - mmengine - INFO - bbox_mAP_copypaste: 0.613 0.842 0.696 0.037 0.593 0.781
2023/09/27 23:19:28 - mmengine - INFO - Epoch(val) [5][1000/1000]    coco/bbox_mAP: 0.6130  coco/bbox_mAP_50: 0.8420  coco/bbox_mAP_75: 0.6960  coco/bbox_mAP_s: 0.0370  coco/bbox_mAP_m: 0.5930  coco/bbox_mAP_l: 0.7810  data_time: 0.0019  time: 0.2996
2023/09/27 23:19:28 - mmengine - INFO - The previous best checkpoint /home/001891254/cmpe249_hw1/mmdetection/work_dirs/fcos_x101-64x4d_fpn_gn-head-1x_tune_waymococo_hj/best_coco_bbox_mAP_epoch_4.pth is removed
2023/09/27 23:19:29 - mmengine - INFO - The best checkpoint with 0.6130 coco/bbox_mAP at 5 epoch is saved to best_coco_bbox_mAP_epoch_5.pth.
2023/09/27 23:20:54 - mmengine - INFO - Epoch(train)  [6][ 50/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 1:05:25  time: 1.6168  data_time: 0.0068  memory: 9232  grad_norm: 2.0310  loss: 0.8392  loss_cls: 0.0559  loss_bbox: 0.2142  loss_centerness: 0.5692
2023/09/27 23:22:13 - mmengine - INFO - Epoch(train)  [6][100/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 1:04:03  time: 1.5755  data_time: 0.0047  memory: 9232  grad_norm: 2.0752  loss: 0.8219  loss_cls: 0.0547  loss_bbox: 0.1996  loss_centerness: 0.5676
2023/09/27 23:23:34 - mmengine - INFO - Epoch(train)  [6][150/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 1:02:44  time: 1.6221  data_time: 0.0046  memory: 9232  grad_norm: 2.3653  loss: 0.7926  loss_cls: 0.0612  loss_bbox: 0.1716  loss_centerness: 0.5598
2023/09/27 23:24:54 - mmengine - INFO - Epoch(train)  [6][200/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 1:01:24  time: 1.5926  data_time: 0.0047  memory: 9232  grad_norm: 1.9744  loss: 0.7948  loss_cls: 0.0513  loss_bbox: 0.1798  loss_centerness: 0.5636
2023/09/27 23:26:14 - mmengine - INFO - Epoch(train)  [6][250/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 1:00:04  time: 1.6131  data_time: 0.0046  memory: 9232  grad_norm: 2.2102  loss: 0.8158  loss_cls: 0.0548  loss_bbox: 0.1938  loss_centerness: 0.5673
2023/09/27 23:27:35 - mmengine - INFO - Epoch(train)  [6][300/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:58:44  time: 1.6015  data_time: 0.0046  memory: 9232  grad_norm: 2.0283  loss: 0.8087  loss_cls: 0.0519  loss_bbox: 0.1902  loss_centerness: 0.5665
2023/09/27 23:28:55 - mmengine - INFO - Epoch(train)  [6][350/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:57:24  time: 1.6028  data_time: 0.0047  memory: 9232  grad_norm: 2.1513  loss: 0.8317  loss_cls: 0.0545  loss_bbox: 0.2092  loss_centerness: 0.5680
2023/09/27 23:30:14 - mmengine - INFO - Epoch(train)  [6][400/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:56:03  time: 1.5869  data_time: 0.0046  memory: 9232  grad_norm: 2.1895  loss: 0.8136  loss_cls: 0.0545  loss_bbox: 0.1932  loss_centerness: 0.5659
2023/09/27 23:31:34 - mmengine - INFO - Epoch(train)  [6][450/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:54:43  time: 1.6069  data_time: 0.0046  memory: 9232  grad_norm: 2.3552  loss: 0.8122  loss_cls: 0.0527  loss_bbox: 0.1927  loss_centerness: 0.5667
2023/09/27 23:32:54 - mmengine - INFO - Exp name: fcos_x101-64x4d_fpn_gn-head-1x_tune_waymococo_hj_20230927_214555
2023/09/27 23:32:54 - mmengine - INFO - Epoch(train)  [6][500/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:53:23  time: 1.5944  data_time: 0.0046  memory: 9232  grad_norm: 2.2010  loss: 0.8377  loss_cls: 0.0589  loss_bbox: 0.2087  loss_centerness: 0.5700
2023/09/27 23:32:54 - mmengine - INFO - Saving checkpoint at 6 epochs
2023/09/27 23:33:12 - mmengine - INFO - Epoch(val)  [6][  50/1000]    eta: 0:04:46  time: 0.3016  data_time: 0.0032  memory: 1349  
2023/09/27 23:33:27 - mmengine - INFO - Epoch(val)  [6][ 100/1000]    eta: 0:04:30  time: 0.3004  data_time: 0.0019  memory: 1349  
2023/09/27 23:33:42 - mmengine - INFO - Epoch(val)  [6][ 150/1000]    eta: 0:04:15  time: 0.3010  data_time: 0.0019  memory: 1349  
2023/09/27 23:33:57 - mmengine - INFO - Epoch(val)  [6][ 200/1000]    eta: 0:04:00  time: 0.3004  data_time: 0.0019  memory: 1349  
2023/09/27 23:34:12 - mmengine - INFO - Epoch(val)  [6][ 250/1000]    eta: 0:03:45  time: 0.3005  data_time: 0.0019  memory: 1349  
2023/09/27 23:34:27 - mmengine - INFO - Epoch(val)  [6][ 300/1000]    eta: 0:03:30  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/27 23:34:42 - mmengine - INFO - Epoch(val)  [6][ 350/1000]    eta: 0:03:15  time: 0.2999  data_time: 0.0019  memory: 1349  
2023/09/27 23:34:57 - mmengine - INFO - Epoch(val)  [6][ 400/1000]    eta: 0:03:00  time: 0.3002  data_time: 0.0019  memory: 1349  
2023/09/27 23:35:12 - mmengine - INFO - Epoch(val)  [6][ 450/1000]    eta: 0:02:45  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/27 23:35:27 - mmengine - INFO - Epoch(val)  [6][ 500/1000]    eta: 0:02:30  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/27 23:35:42 - mmengine - INFO - Epoch(val)  [6][ 550/1000]    eta: 0:02:15  time: 0.3007  data_time: 0.0019  memory: 1349  
2023/09/27 23:35:57 - mmengine - INFO - Epoch(val)  [6][ 600/1000]    eta: 0:02:00  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/27 23:36:12 - mmengine - INFO - Epoch(val)  [6][ 650/1000]    eta: 0:01:45  time: 0.3000  data_time: 0.0019  memory: 1349  
2023/09/27 23:36:27 - mmengine - INFO - Epoch(val)  [6][ 700/1000]    eta: 0:01:30  time: 0.2986  data_time: 0.0019  memory: 1349  
2023/09/27 23:36:42 - mmengine - INFO - Epoch(val)  [6][ 750/1000]    eta: 0:01:15  time: 0.2988  data_time: 0.0019  memory: 1349  
2023/09/27 23:36:57 - mmengine - INFO - Epoch(val)  [6][ 800/1000]    eta: 0:01:00  time: 0.3006  data_time: 0.0019  memory: 1349  
2023/09/27 23:37:12 - mmengine - INFO - Epoch(val)  [6][ 850/1000]    eta: 0:00:45  time: 0.3002  data_time: 0.0019  memory: 1349  
2023/09/27 23:37:27 - mmengine - INFO - Epoch(val)  [6][ 900/1000]    eta: 0:00:30  time: 0.3001  data_time: 0.0019  memory: 1349  
2023/09/27 23:37:42 - mmengine - INFO - Epoch(val)  [6][ 950/1000]    eta: 0:00:15  time: 0.2994  data_time: 0.0019  memory: 1349  
2023/09/27 23:37:57 - mmengine - INFO - Epoch(val)  [6][1000/1000]    eta: 0:00:00  time: 0.2980  data_time: 0.0018  memory: 1349  
2023/09/27 23:37:57 - mmengine - INFO - Evaluating bbox...
2023/09/27 23:38:08 - mmengine - INFO - bbox_mAP_copypaste: 0.636 0.845 0.710 0.039 0.615 0.820
2023/09/27 23:38:08 - mmengine - INFO - Epoch(val) [6][1000/1000]    coco/bbox_mAP: 0.6360  coco/bbox_mAP_50: 0.8450  coco/bbox_mAP_75: 0.7100  coco/bbox_mAP_s: 0.0390  coco/bbox_mAP_m: 0.6150  coco/bbox_mAP_l: 0.8200  data_time: 0.0020  time: 0.3001
2023/09/27 23:38:08 - mmengine - INFO - The previous best checkpoint /home/001891254/cmpe249_hw1/mmdetection/work_dirs/fcos_x101-64x4d_fpn_gn-head-1x_tune_waymococo_hj/best_coco_bbox_mAP_epoch_5.pth is removed
2023/09/27 23:38:10 - mmengine - INFO - The best checkpoint with 0.6360 coco/bbox_mAP at 6 epoch is saved to best_coco_bbox_mAP_epoch_6.pth.
2023/09/27 23:39:33 - mmengine - INFO - Epoch(train)  [7][ 50/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:52:03  time: 1.5966  data_time: 0.0070  memory: 9232  grad_norm: 2.0936  loss: 0.8087  loss_cls: 0.0517  loss_bbox: 0.1900  loss_centerness: 0.5670
2023/09/27 23:40:52 - mmengine - INFO - Epoch(train)  [7][100/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:50:43  time: 1.5957  data_time: 0.0045  memory: 9232  grad_norm: 2.2162  loss: 0.8010  loss_cls: 0.0492  loss_bbox: 0.1844  loss_centerness: 0.5674
2023/09/27 23:42:13 - mmengine - INFO - Epoch(train)  [7][150/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:49:22  time: 1.6032  data_time: 0.0046  memory: 9232  grad_norm: 2.1647  loss: 0.7939  loss_cls: 0.0545  loss_bbox: 0.1790  loss_centerness: 0.5604
2023/09/27 23:43:33 - mmengine - INFO - Epoch(train)  [7][200/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:48:02  time: 1.5988  data_time: 0.0046  memory: 9232  grad_norm: 2.0133  loss: 0.8052  loss_cls: 0.0496  loss_bbox: 0.1899  loss_centerness: 0.5657
2023/09/27 23:44:53 - mmengine - INFO - Epoch(train)  [7][250/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:46:43  time: 1.6140  data_time: 0.0046  memory: 9232  grad_norm: 2.2102  loss: 0.7873  loss_cls: 0.0516  loss_bbox: 0.1709  loss_centerness: 0.5648
2023/09/27 23:46:13 - mmengine - INFO - Epoch(train)  [7][300/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:45:22  time: 1.5949  data_time: 0.0046  memory: 9232  grad_norm: 2.2951  loss: 0.7966  loss_cls: 0.0477  loss_bbox: 0.1852  loss_centerness: 0.5637
2023/09/27 23:47:34 - mmengine - INFO - Epoch(train)  [7][350/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:44:02  time: 1.6116  data_time: 0.0046  memory: 9232  grad_norm: 2.6220  loss: 0.7981  loss_cls: 0.0537  loss_bbox: 0.1776  loss_centerness: 0.5667
2023/09/27 23:48:54 - mmengine - INFO - Epoch(train)  [7][400/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:42:43  time: 1.6157  data_time: 0.0046  memory: 9232  grad_norm: 2.1829  loss: 0.8124  loss_cls: 0.0537  loss_bbox: 0.1920  loss_centerness: 0.5667
2023/09/27 23:50:15 - mmengine - INFO - Epoch(train)  [7][450/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:41:23  time: 1.6117  data_time: 0.0046  memory: 9232  grad_norm: 2.0776  loss: 0.8129  loss_cls: 0.0549  loss_bbox: 0.1889  loss_centerness: 0.5691
2023/09/27 23:51:34 - mmengine - INFO - Exp name: fcos_x101-64x4d_fpn_gn-head-1x_tune_waymococo_hj_20230927_214555
2023/09/27 23:51:34 - mmengine - INFO - Epoch(train)  [7][500/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:40:02  time: 1.5797  data_time: 0.0045  memory: 9232  grad_norm: 2.2980  loss: 0.8467  loss_cls: 0.0599  loss_bbox: 0.2202  loss_centerness: 0.5666
2023/09/27 23:51:34 - mmengine - INFO - Saving checkpoint at 7 epochs
2023/09/27 23:51:52 - mmengine - INFO - Epoch(val)  [7][  50/1000]    eta: 0:04:46  time: 0.3014  data_time: 0.0032  memory: 1349  
2023/09/27 23:52:07 - mmengine - INFO - Epoch(val)  [7][ 100/1000]    eta: 0:04:30  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/27 23:52:22 - mmengine - INFO - Epoch(val)  [7][ 150/1000]    eta: 0:04:15  time: 0.3008  data_time: 0.0019  memory: 1349  
2023/09/27 23:52:37 - mmengine - INFO - Epoch(val)  [7][ 200/1000]    eta: 0:04:00  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/27 23:52:52 - mmengine - INFO - Epoch(val)  [7][ 250/1000]    eta: 0:03:45  time: 0.3000  data_time: 0.0019  memory: 1349  
2023/09/27 23:53:07 - mmengine - INFO - Epoch(val)  [7][ 300/1000]    eta: 0:03:30  time: 0.3007  data_time: 0.0019  memory: 1349  
2023/09/27 23:53:22 - mmengine - INFO - Epoch(val)  [7][ 350/1000]    eta: 0:03:15  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/27 23:53:37 - mmengine - INFO - Epoch(val)  [7][ 400/1000]    eta: 0:03:00  time: 0.2992  data_time: 0.0019  memory: 1349  
2023/09/27 23:53:52 - mmengine - INFO - Epoch(val)  [7][ 450/1000]    eta: 0:02:45  time: 0.3004  data_time: 0.0019  memory: 1349  
2023/09/27 23:54:07 - mmengine - INFO - Epoch(val)  [7][ 500/1000]    eta: 0:02:30  time: 0.3012  data_time: 0.0022  memory: 1349  
2023/09/27 23:54:22 - mmengine - INFO - Epoch(val)  [7][ 550/1000]    eta: 0:02:15  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/27 23:54:37 - mmengine - INFO - Epoch(val)  [7][ 600/1000]    eta: 0:02:00  time: 0.3002  data_time: 0.0019  memory: 1349  
2023/09/27 23:54:52 - mmengine - INFO - Epoch(val)  [7][ 650/1000]    eta: 0:01:45  time: 0.3002  data_time: 0.0019  memory: 1349  
2023/09/27 23:55:07 - mmengine - INFO - Epoch(val)  [7][ 700/1000]    eta: 0:01:30  time: 0.3001  data_time: 0.0019  memory: 1349  
2023/09/27 23:55:22 - mmengine - INFO - Epoch(val)  [7][ 750/1000]    eta: 0:01:15  time: 0.2998  data_time: 0.0019  memory: 1349  
2023/09/27 23:55:37 - mmengine - INFO - Epoch(val)  [7][ 800/1000]    eta: 0:01:00  time: 0.3006  data_time: 0.0019  memory: 1349  
2023/09/27 23:55:52 - mmengine - INFO - Epoch(val)  [7][ 850/1000]    eta: 0:00:45  time: 0.3006  data_time: 0.0020  memory: 1349  
2023/09/27 23:56:07 - mmengine - INFO - Epoch(val)  [7][ 900/1000]    eta: 0:00:30  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/27 23:56:22 - mmengine - INFO - Epoch(val)  [7][ 950/1000]    eta: 0:00:15  time: 0.2993  data_time: 0.0019  memory: 1349  
2023/09/27 23:56:37 - mmengine - INFO - Epoch(val)  [7][1000/1000]    eta: 0:00:00  time: 0.2973  data_time: 0.0019  memory: 1349  
2023/09/27 23:56:38 - mmengine - INFO - Evaluating bbox...
2023/09/27 23:56:49 - mmengine - INFO - bbox_mAP_copypaste: 0.652 0.854 0.718 0.043 0.629 0.843
2023/09/27 23:56:49 - mmengine - INFO - Epoch(val) [7][1000/1000]    coco/bbox_mAP: 0.6520  coco/bbox_mAP_50: 0.8540  coco/bbox_mAP_75: 0.7180  coco/bbox_mAP_s: 0.0430  coco/bbox_mAP_m: 0.6290  coco/bbox_mAP_l: 0.8430  data_time: 0.0020  time: 0.3001
2023/09/27 23:56:49 - mmengine - INFO - The previous best checkpoint /home/001891254/cmpe249_hw1/mmdetection/work_dirs/fcos_x101-64x4d_fpn_gn-head-1x_tune_waymococo_hj/best_coco_bbox_mAP_epoch_6.pth is removed
2023/09/27 23:56:50 - mmengine - INFO - The best checkpoint with 0.6520 coco/bbox_mAP at 7 epoch is saved to best_coco_bbox_mAP_epoch_7.pth.
2023/09/27 23:58:14 - mmengine - INFO - Epoch(train)  [8][ 50/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:38:42  time: 1.6107  data_time: 0.0070  memory: 9232  grad_norm: 2.2139  loss: 0.7784  loss_cls: 0.0481  loss_bbox: 0.1670  loss_centerness: 0.5634
2023/09/27 23:59:33 - mmengine - INFO - Epoch(train)  [8][100/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:37:22  time: 1.5959  data_time: 0.0046  memory: 9232  grad_norm: 2.1158  loss: 0.7976  loss_cls: 0.0453  loss_bbox: 0.1884  loss_centerness: 0.5639
2023/09/28 00:00:53 - mmengine - INFO - Epoch(train)  [8][150/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:36:02  time: 1.5984  data_time: 0.0046  memory: 9232  grad_norm: 2.1481  loss: 0.8009  loss_cls: 0.0525  loss_bbox: 0.1839  loss_centerness: 0.5645
2023/09/28 00:02:14 - mmengine - INFO - Epoch(train)  [8][200/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:34:42  time: 1.6206  data_time: 0.0046  memory: 9232  grad_norm: 2.4412  loss: 0.7930  loss_cls: 0.0552  loss_bbox: 0.1732  loss_centerness: 0.5646
2023/09/28 00:03:34 - mmengine - INFO - Epoch(train)  [8][250/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:33:22  time: 1.5915  data_time: 0.0045  memory: 9232  grad_norm: 2.5399  loss: 0.7952  loss_cls: 0.0528  loss_bbox: 0.1784  loss_centerness: 0.5640
2023/09/28 00:04:54 - mmengine - INFO - Epoch(train)  [8][300/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:32:02  time: 1.6027  data_time: 0.0045  memory: 9232  grad_norm: 2.2651  loss: 0.8069  loss_cls: 0.0483  loss_bbox: 0.1890  loss_centerness: 0.5695
2023/09/28 00:06:16 - mmengine - INFO - Epoch(train)  [8][350/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:30:42  time: 1.6305  data_time: 0.0046  memory: 9232  grad_norm: 2.2852  loss: 0.7947  loss_cls: 0.0515  loss_bbox: 0.1801  loss_centerness: 0.5631
2023/09/28 00:07:36 - mmengine - INFO - Epoch(train)  [8][400/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:29:22  time: 1.6064  data_time: 0.0046  memory: 9232  grad_norm: 2.0790  loss: 0.8039  loss_cls: 0.0497  loss_bbox: 0.1859  loss_centerness: 0.5683
2023/09/28 00:08:56 - mmengine - INFO - Epoch(train)  [8][450/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:28:02  time: 1.6036  data_time: 0.0046  memory: 9232  grad_norm: 2.1430  loss: 0.7899  loss_cls: 0.0466  loss_bbox: 0.1777  loss_centerness: 0.5656
2023/09/28 00:10:16 - mmengine - INFO - Exp name: fcos_x101-64x4d_fpn_gn-head-1x_tune_waymococo_hj_20230927_214555
2023/09/28 00:10:16 - mmengine - INFO - Epoch(train)  [8][500/500]  base_lr: 1.0000e-03 lr: 1.0000e-03  eta: 0:26:42  time: 1.6039  data_time: 0.0045  memory: 9232  grad_norm: 2.2833  loss: 0.8097  loss_cls: 0.0498  loss_bbox: 0.1945  loss_centerness: 0.5654
2023/09/28 00:10:16 - mmengine - INFO - Saving checkpoint at 8 epochs
2023/09/28 00:10:34 - mmengine - INFO - Epoch(val)  [8][  50/1000]    eta: 0:04:46  time: 0.3017  data_time: 0.0033  memory: 1349  
2023/09/28 00:10:49 - mmengine - INFO - Epoch(val)  [8][ 100/1000]    eta: 0:04:30  time: 0.3002  data_time: 0.0020  memory: 1349  
2023/09/28 00:11:04 - mmengine - INFO - Epoch(val)  [8][ 150/1000]    eta: 0:04:15  time: 0.3000  data_time: 0.0019  memory: 1349  
2023/09/28 00:11:19 - mmengine - INFO - Epoch(val)  [8][ 200/1000]    eta: 0:04:00  time: 0.3006  data_time: 0.0020  memory: 1349  
2023/09/28 00:11:34 - mmengine - INFO - Epoch(val)  [8][ 250/1000]    eta: 0:03:45  time: 0.3005  data_time: 0.0020  memory: 1349  
2023/09/28 00:11:49 - mmengine - INFO - Epoch(val)  [8][ 300/1000]    eta: 0:03:30  time: 0.3002  data_time: 0.0020  memory: 1349  
2023/09/28 00:12:04 - mmengine - INFO - Epoch(val)  [8][ 350/1000]    eta: 0:03:15  time: 0.3005  data_time: 0.0020  memory: 1349  
2023/09/28 00:12:19 - mmengine - INFO - Epoch(val)  [8][ 400/1000]    eta: 0:03:00  time: 0.3002  data_time: 0.0020  memory: 1349  
2023/09/28 00:12:34 - mmengine - INFO - Epoch(val)  [8][ 450/1000]    eta: 0:02:45  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/28 00:12:49 - mmengine - INFO - Epoch(val)  [8][ 500/1000]    eta: 0:02:30  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/28 00:13:04 - mmengine - INFO - Epoch(val)  [8][ 550/1000]    eta: 0:02:15  time: 0.3004  data_time: 0.0019  memory: 1349  
2023/09/28 00:13:19 - mmengine - INFO - Epoch(val)  [8][ 600/1000]    eta: 0:02:00  time: 0.3000  data_time: 0.0019  memory: 1349  
2023/09/28 00:13:34 - mmengine - INFO - Epoch(val)  [8][ 650/1000]    eta: 0:01:45  time: 0.2997  data_time: 0.0019  memory: 1349  
2023/09/28 00:13:49 - mmengine - INFO - Epoch(val)  [8][ 700/1000]    eta: 0:01:30  time: 0.2995  data_time: 0.0019  memory: 1349  
2023/09/28 00:14:04 - mmengine - INFO - Epoch(val)  [8][ 750/1000]    eta: 0:01:15  time: 0.2994  data_time: 0.0019  memory: 1349  
2023/09/28 00:14:19 - mmengine - INFO - Epoch(val)  [8][ 800/1000]    eta: 0:01:00  time: 0.2997  data_time: 0.0021  memory: 1349  
2023/09/28 00:14:34 - mmengine - INFO - Epoch(val)  [8][ 850/1000]    eta: 0:00:45  time: 0.3002  data_time: 0.0020  memory: 1349  
2023/09/28 00:14:49 - mmengine - INFO - Epoch(val)  [8][ 900/1000]    eta: 0:00:30  time: 0.3001  data_time: 0.0019  memory: 1349  
2023/09/28 00:15:04 - mmengine - INFO - Epoch(val)  [8][ 950/1000]    eta: 0:00:15  time: 0.2995  data_time: 0.0019  memory: 1349  
2023/09/28 00:15:19 - mmengine - INFO - Epoch(val)  [8][1000/1000]    eta: 0:00:00  time: 0.2978  data_time: 0.0019  memory: 1349  
2023/09/28 00:15:20 - mmengine - INFO - Evaluating bbox...
2023/09/28 00:15:30 - mmengine - INFO - bbox_mAP_copypaste: 0.651 0.856 0.725 0.038 0.638 0.830
2023/09/28 00:15:30 - mmengine - INFO - Epoch(val) [8][1000/1000]    coco/bbox_mAP: 0.6510  coco/bbox_mAP_50: 0.8560  coco/bbox_mAP_75: 0.7250  coco/bbox_mAP_s: 0.0380  coco/bbox_mAP_m: 0.6380  coco/bbox_mAP_l: 0.8300  data_time: 0.0020  time: 0.3000
2023/09/28 00:16:52 - mmengine - INFO - Epoch(train)  [9][ 50/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:25:22  time: 1.6263  data_time: 0.0070  memory: 9232  grad_norm: 1.9515  loss: 0.8077  loss_cls: 0.0488  loss_bbox: 0.1927  loss_centerness: 0.5662
2023/09/28 00:18:12 - mmengine - INFO - Epoch(train)  [9][100/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:24:02  time: 1.6034  data_time: 0.0046  memory: 9232  grad_norm: 1.8562  loss: 0.7596  loss_cls: 0.0433  loss_bbox: 0.1517  loss_centerness: 0.5646
2023/09/28 00:19:33 - mmengine - INFO - Epoch(train)  [9][150/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:22:42  time: 1.6137  data_time: 0.0046  memory: 9232  grad_norm: 1.9071  loss: 0.7757  loss_cls: 0.0443  loss_bbox: 0.1685  loss_centerness: 0.5629
2023/09/28 00:20:53 - mmengine - INFO - Epoch(train)  [9][200/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:21:22  time: 1.6036  data_time: 0.0045  memory: 9232  grad_norm: 1.7935  loss: 0.7860  loss_cls: 0.0453  loss_bbox: 0.1767  loss_centerness: 0.5640
2023/09/28 00:22:12 - mmengine - INFO - Epoch(train)  [9][250/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:20:02  time: 1.5907  data_time: 0.0046  memory: 9232  grad_norm: 2.0758  loss: 0.7784  loss_cls: 0.0469  loss_bbox: 0.1665  loss_centerness: 0.5651
2023/09/28 00:23:34 - mmengine - INFO - Epoch(train)  [9][300/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:18:42  time: 1.6266  data_time: 0.0045  memory: 9232  grad_norm: 1.7657  loss: 0.8007  loss_cls: 0.0480  loss_bbox: 0.1869  loss_centerness: 0.5658
2023/09/28 00:24:54 - mmengine - INFO - Epoch(train)  [9][350/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:17:21  time: 1.5999  data_time: 0.0046  memory: 9232  grad_norm: 1.9733  loss: 0.7697  loss_cls: 0.0474  loss_bbox: 0.1585  loss_centerness: 0.5638
2023/09/28 00:26:13 - mmengine - INFO - Epoch(train)  [9][400/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:16:01  time: 1.5967  data_time: 0.0046  memory: 9232  grad_norm: 1.8932  loss: 0.7691  loss_cls: 0.0473  loss_bbox: 0.1585  loss_centerness: 0.5633
2023/09/28 00:27:34 - mmengine - INFO - Epoch(train)  [9][450/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:14:41  time: 1.6093  data_time: 0.0046  memory: 9232  grad_norm: 1.9477  loss: 0.7562  loss_cls: 0.0418  loss_bbox: 0.1550  loss_centerness: 0.5594
2023/09/28 00:28:54 - mmengine - INFO - Exp name: fcos_x101-64x4d_fpn_gn-head-1x_tune_waymococo_hj_20230927_214555
2023/09/28 00:28:54 - mmengine - INFO - Epoch(train)  [9][500/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:13:21  time: 1.6041  data_time: 0.0045  memory: 9232  grad_norm: 1.9228  loss: 0.7653  loss_cls: 0.0408  loss_bbox: 0.1595  loss_centerness: 0.5651
2023/09/28 00:28:54 - mmengine - INFO - Saving checkpoint at 9 epochs
2023/09/28 00:29:12 - mmengine - INFO - Epoch(val)  [9][  50/1000]    eta: 0:04:45  time: 0.3010  data_time: 0.0032  memory: 1349  
2023/09/28 00:29:27 - mmengine - INFO - Epoch(val)  [9][ 100/1000]    eta: 0:04:30  time: 0.2991  data_time: 0.0019  memory: 1349  
2023/09/28 00:29:42 - mmengine - INFO - Epoch(val)  [9][ 150/1000]    eta: 0:04:14  time: 0.2997  data_time: 0.0019  memory: 1349  
2023/09/28 00:29:57 - mmengine - INFO - Epoch(val)  [9][ 200/1000]    eta: 0:03:59  time: 0.2994  data_time: 0.0019  memory: 1349  
2023/09/28 00:30:12 - mmengine - INFO - Epoch(val)  [9][ 250/1000]    eta: 0:03:44  time: 0.2996  data_time: 0.0019  memory: 1349  
2023/09/28 00:30:26 - mmengine - INFO - Epoch(val)  [9][ 300/1000]    eta: 0:03:29  time: 0.2986  data_time: 0.0019  memory: 1349  
2023/09/28 00:30:41 - mmengine - INFO - Epoch(val)  [9][ 350/1000]    eta: 0:03:14  time: 0.2999  data_time: 0.0019  memory: 1349  
2023/09/28 00:30:56 - mmengine - INFO - Epoch(val)  [9][ 400/1000]    eta: 0:02:59  time: 0.2994  data_time: 0.0019  memory: 1349  
2023/09/28 00:31:11 - mmengine - INFO - Epoch(val)  [9][ 450/1000]    eta: 0:02:44  time: 0.2993  data_time: 0.0019  memory: 1349  
2023/09/28 00:31:26 - mmengine - INFO - Epoch(val)  [9][ 500/1000]    eta: 0:02:29  time: 0.2996  data_time: 0.0019  memory: 1349  
2023/09/28 00:31:41 - mmengine - INFO - Epoch(val)  [9][ 550/1000]    eta: 0:02:14  time: 0.3000  data_time: 0.0019  memory: 1349  
2023/09/28 00:31:56 - mmengine - INFO - Epoch(val)  [9][ 600/1000]    eta: 0:01:59  time: 0.2991  data_time: 0.0019  memory: 1349  
2023/09/28 00:32:11 - mmengine - INFO - Epoch(val)  [9][ 650/1000]    eta: 0:01:44  time: 0.2987  data_time: 0.0019  memory: 1349  
2023/09/28 00:32:26 - mmengine - INFO - Epoch(val)  [9][ 700/1000]    eta: 0:01:29  time: 0.2983  data_time: 0.0018  memory: 1349  
2023/09/28 00:32:41 - mmengine - INFO - Epoch(val)  [9][ 750/1000]    eta: 0:01:14  time: 0.2973  data_time: 0.0018  memory: 1349  
2023/09/28 00:32:56 - mmengine - INFO - Epoch(val)  [9][ 800/1000]    eta: 0:00:59  time: 0.2997  data_time: 0.0019  memory: 1349  
2023/09/28 00:33:11 - mmengine - INFO - Epoch(val)  [9][ 850/1000]    eta: 0:00:44  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/28 00:33:26 - mmengine - INFO - Epoch(val)  [9][ 900/1000]    eta: 0:00:29  time: 0.3002  data_time: 0.0019  memory: 1349  
2023/09/28 00:33:41 - mmengine - INFO - Epoch(val)  [9][ 950/1000]    eta: 0:00:14  time: 0.2992  data_time: 0.0019  memory: 1349  
2023/09/28 00:33:56 - mmengine - INFO - Epoch(val)  [9][1000/1000]    eta: 0:00:00  time: 0.2979  data_time: 0.0018  memory: 1349  
2023/09/28 00:33:57 - mmengine - INFO - Evaluating bbox...
2023/09/28 00:34:07 - mmengine - INFO - bbox_mAP_copypaste: 0.668 0.856 0.728 0.042 0.649 0.857
2023/09/28 00:34:07 - mmengine - INFO - Epoch(val) [9][1000/1000]    coco/bbox_mAP: 0.6680  coco/bbox_mAP_50: 0.8560  coco/bbox_mAP_75: 0.7280  coco/bbox_mAP_s: 0.0420  coco/bbox_mAP_m: 0.6490  coco/bbox_mAP_l: 0.8570  data_time: 0.0019  time: 0.2993
2023/09/28 00:34:07 - mmengine - INFO - The previous best checkpoint /home/001891254/cmpe249_hw1/mmdetection/work_dirs/fcos_x101-64x4d_fpn_gn-head-1x_tune_waymococo_hj/best_coco_bbox_mAP_epoch_7.pth is removed
2023/09/28 00:34:08 - mmengine - INFO - The best checkpoint with 0.6680 coco/bbox_mAP at 9 epoch is saved to best_coco_bbox_mAP_epoch_9.pth.
2023/09/28 00:35:32 - mmengine - INFO - Epoch(train) [10][ 50/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:12:01  time: 1.5924  data_time: 0.0070  memory: 9232  grad_norm: 1.7034  loss: 0.7990  loss_cls: 0.0476  loss_bbox: 0.1880  loss_centerness: 0.5634
2023/09/28 00:36:52 - mmengine - INFO - Epoch(train) [10][100/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:10:41  time: 1.6143  data_time: 0.0046  memory: 9232  grad_norm: 2.0922  loss: 0.7505  loss_cls: 0.0416  loss_bbox: 0.1474  loss_centerness: 0.5614
2023/09/28 00:38:13 - mmengine - INFO - Epoch(train) [10][150/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:09:21  time: 1.6125  data_time: 0.0045  memory: 9232  grad_norm: 1.9186  loss: 0.7697  loss_cls: 0.0440  loss_bbox: 0.1609  loss_centerness: 0.5649
2023/09/28 00:39:33 - mmengine - INFO - Epoch(train) [10][200/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:08:00  time: 1.6001  data_time: 0.0046  memory: 9232  grad_norm: 1.9376  loss: 0.7745  loss_cls: 0.0429  loss_bbox: 0.1648  loss_centerness: 0.5668
2023/09/28 00:40:53 - mmengine - INFO - Epoch(train) [10][250/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:06:40  time: 1.6022  data_time: 0.0046  memory: 9232  grad_norm: 1.8215  loss: 0.7851  loss_cls: 0.0463  loss_bbox: 0.1736  loss_centerness: 0.5652
2023/09/28 00:42:14 - mmengine - INFO - Epoch(train) [10][300/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:05:20  time: 1.6181  data_time: 0.0045  memory: 9232  grad_norm: 2.0010  loss: 0.7791  loss_cls: 0.0435  loss_bbox: 0.1701  loss_centerness: 0.5654
2023/09/28 00:43:34 - mmengine - INFO - Epoch(train) [10][350/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:04:00  time: 1.6015  data_time: 0.0046  memory: 9232  grad_norm: 2.0329  loss: 0.7904  loss_cls: 0.0515  loss_bbox: 0.1721  loss_centerness: 0.5668
2023/09/28 00:44:53 - mmengine - INFO - Epoch(train) [10][400/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:02:40  time: 1.5767  data_time: 0.0046  memory: 9232  grad_norm: 1.9837  loss: 0.7795  loss_cls: 0.0476  loss_bbox: 0.1674  loss_centerness: 0.5645
2023/09/28 00:46:13 - mmengine - INFO - Epoch(train) [10][450/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:01:20  time: 1.5988  data_time: 0.0046  memory: 9232  grad_norm: 2.0426  loss: 0.7539  loss_cls: 0.0474  loss_bbox: 0.1449  loss_centerness: 0.5616
2023/09/28 00:47:33 - mmengine - INFO - Exp name: fcos_x101-64x4d_fpn_gn-head-1x_tune_waymococo_hj_20230927_214555
2023/09/28 00:47:33 - mmengine - INFO - Epoch(train) [10][500/500]  base_lr: 1.0000e-04 lr: 1.0000e-04  eta: 0:00:00  time: 1.5931  data_time: 0.0046  memory: 9232  grad_norm: 1.7055  loss: 0.7905  loss_cls: 0.0414  loss_bbox: 0.1829  loss_centerness: 0.5662
2023/09/28 00:47:33 - mmengine - INFO - Saving checkpoint at 10 epochs
2023/09/28 00:47:51 - mmengine - INFO - Epoch(val) [10][  50/1000]    eta: 0:04:46  time: 0.3020  data_time: 0.0032  memory: 1349  
2023/09/28 00:48:06 - mmengine - INFO - Epoch(val) [10][ 100/1000]    eta: 0:04:30  time: 0.3000  data_time: 0.0019  memory: 1349  
2023/09/28 00:48:21 - mmengine - INFO - Epoch(val) [10][ 150/1000]    eta: 0:04:15  time: 0.3007  data_time: 0.0019  memory: 1349  
2023/09/28 00:48:36 - mmengine - INFO - Epoch(val) [10][ 200/1000]    eta: 0:04:00  time: 0.3000  data_time: 0.0019  memory: 1349  
2023/09/28 00:48:51 - mmengine - INFO - Epoch(val) [10][ 250/1000]    eta: 0:03:45  time: 0.3000  data_time: 0.0019  memory: 1349  
2023/09/28 00:49:06 - mmengine - INFO - Epoch(val) [10][ 300/1000]    eta: 0:03:30  time: 0.3004  data_time: 0.0019  memory: 1349  
2023/09/28 00:49:21 - mmengine - INFO - Epoch(val) [10][ 350/1000]    eta: 0:03:15  time: 0.3003  data_time: 0.0022  memory: 1349  
2023/09/28 00:49:36 - mmengine - INFO - Epoch(val) [10][ 400/1000]    eta: 0:03:00  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/28 00:49:51 - mmengine - INFO - Epoch(val) [10][ 450/1000]    eta: 0:02:45  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/28 00:50:06 - mmengine - INFO - Epoch(val) [10][ 500/1000]    eta: 0:02:30  time: 0.2996  data_time: 0.0019  memory: 1349  
2023/09/28 00:50:21 - mmengine - INFO - Epoch(val) [10][ 550/1000]    eta: 0:02:15  time: 0.3003  data_time: 0.0019  memory: 1349  
2023/09/28 00:50:36 - mmengine - INFO - Epoch(val) [10][ 600/1000]    eta: 0:02:00  time: 0.3009  data_time: 0.0019  memory: 1349  
2023/09/28 00:50:51 - mmengine - INFO - Epoch(val) [10][ 650/1000]    eta: 0:01:45  time: 0.3003  data_time: 0.0020  memory: 1349  
2023/09/28 00:51:06 - mmengine - INFO - Epoch(val) [10][ 700/1000]    eta: 0:01:30  time: 0.2988  data_time: 0.0019  memory: 1349  
2023/09/28 00:51:21 - mmengine - INFO - Epoch(val) [10][ 750/1000]    eta: 0:01:15  time: 0.2986  data_time: 0.0019  memory: 1349  
2023/09/28 00:51:36 - mmengine - INFO - Epoch(val) [10][ 800/1000]    eta: 0:01:00  time: 0.3013  data_time: 0.0019  memory: 1349  
2023/09/28 00:51:51 - mmengine - INFO - Epoch(val) [10][ 850/1000]    eta: 0:00:45  time: 0.3010  data_time: 0.0019  memory: 1349  
2023/09/28 00:52:06 - mmengine - INFO - Epoch(val) [10][ 900/1000]    eta: 0:00:30  time: 0.2999  data_time: 0.0019  memory: 1349  
2023/09/28 00:52:21 - mmengine - INFO - Epoch(val) [10][ 950/1000]    eta: 0:00:15  time: 0.2987  data_time: 0.0019  memory: 1349  
2023/09/28 00:52:36 - mmengine - INFO - Epoch(val) [10][1000/1000]    eta: 0:00:00  time: 0.2964  data_time: 0.0019  memory: 1349  
2023/09/28 00:52:37 - mmengine - INFO - Evaluating bbox...
2023/09/28 00:52:47 - mmengine - INFO - bbox_mAP_copypaste: 0.666 0.855 0.729 0.042 0.648 0.856
2023/09/28 00:52:47 - mmengine - INFO - Epoch(val) [10][1000/1000]    coco/bbox_mAP: 0.6660  coco/bbox_mAP_50: 0.8550  coco/bbox_mAP_75: 0.7290  coco/bbox_mAP_s: 0.0420  coco/bbox_mAP_m: 0.6480  coco/bbox_mAP_l: 0.8560  data_time: 0.0020  time: 0.3000
